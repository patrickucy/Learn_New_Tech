day19
{AM1}
一、Property List
	1.	User Default
		用于存储应用程序的配置信息
		1)	是不是第一次打开？
			如果是第一次打开 
			就 展示教学图片
		2)	当前的应用程序版本信息
			如果发现本地存储的版本信息 和服务器上有差距 
			就 提示用户更新程序		
		3)	当前应用程序被打开的次数
			试用版本
		4)	数据结构版本信息
			做数据迁移(1.0 -> 2.0)
		5)	检查购买
			1>	这个软件是不是国人购买
			2>	月查 <-> 日查 <-> 次查
			
			
		基本概念
		1)	每个程序在每个设备上有一个单独的
			User Default
		2)	User Default就认为是一个NSDictionary
			取值 ....ForKey
			存值 set.... forKey
		3)	User Default的内的键值对任你设置
		4)	用户删除应用程序后， User Default随之消失
		[P：显示运行次数]
{AM2}
	[P: 教程跳转]
	
{PM1}
二、 单例模式
	1.	是什么？
		设计模式之一
	2.	使用频率
		特别高
	3.	干嘛的
		让数据or对象，在程序的各个地方都能够访问
		并且保持唯一
	
	双开
	天黑请闭眼
	4.	要素
		1)	真正限制数量的是对象的个数
			->	使用该类的人不要调用alloc消息
				以及任何涉及初始化的类工厂方法
		2)	保证在程序各处均能访问
			+	静态消息 有类就能调
{PM2}
	5.	单例模式下共享数据
		1)	能够让你在不同的vc之前传输数据
			目的：降低vc之间的耦合程度
		2)	还能在不同的任何对象之间传送数据
		3)	缺点
			1.	你不能控制哪个类没有权限修改
			2.	你都不知道谁修改了 很难知道修改的顺序
	6.	单例模式的应用
		1.	标示
			+ sharedXxxxxxxx
			+ defaultXxxxxx
			+ standardXxxxxx
		2.	在公司启用CoreData/数据框架之前
			一般都会构建一个单例的数据中心
			AppModel	单例
			@property (strong, nonatomic) 
				NSMutableArray * contacts;
				
			TRAppModel
			TRDataCenter
{PM3} 

三、MVC

[P31 联系人使用APP model 增改查]
			
		
		
		
		
		
		
		
		
		
			
		
		
				
	
	
	